@page "/"
@using PhotoGallery.Models
@using PhotoGallery.Services
@using System.Net.Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@inject JsonFilePhotoService PhotoService

<PageTitle>Photo Gallery</PageTitle>

<div class="card-row">
    @foreach (var photo in PhotoService.GetPhotos())
    {
        <div class="card">
            <div class="card-img" style="background-image: url('@photo.Url');"></div>
            <div class="card-body">
                <h5 class="card-title">@photo.Title</h5>
            </div>
        </div>
        <div class="card-footer">
            <small class="text-muted">
                <button @onclick="(e => SelectPhoto(photo.Id))"
                    data-toggle="modal" data-target="#photoModal" class="btn btn-primary">
                    More info
                </button>
            </small>
        </div>
    }
</div>

<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@if (selectedPhoto != null)
{
    <div class="modal fade" id="photoModal" tabindex="-1" role="dialog" aria-labelledby="photoTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="photoTitle">@selectedPhoto.Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedPhoto.Image');">
                        </div>
                        <div class="card-body">
                            <p class="card-text">@selectedPhoto.Description</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
}



@code {
    

    Photo? selectedPhoto;
    string? selectedPhotoId;

    void SelectPhoto(string photoId)
    {
        selectedPhotoId = photoId;
        selectedPhoto = PhotoService.GetPhotos().First(x => x.Id == photoId);
    }

    int currentRating = 0;
    int voteCount = 0;
    string voteLabel;

    void GetCurrentRating()
    {
        if (selectedPhoto.Ratings == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectedPhoto.Ratings.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";
            currentRating = selectedPhoto.Ratings.Sum() / voteCount;
        }
        Console.WriteLine($"Current rating for {selectedPhoto.Id}: {currentRating}");
    }
}
